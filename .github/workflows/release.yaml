jobs:
  make_release_bin:
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: ⬆ Checkout
      uses: actions/checkout@v4
    - name: ✓ Install Nix
      uses: cachix/install-nix-action@v31
      with:
        extra_nix_config: 'access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

          experimental-features = nix-command flakes impure-derivations auto-allocate-uids
          cgroups

          system-features = nixos-test benchmark big-parallel kvm recursive-nix

          download-buffer-size = 104857600

          accept-flake-config = true

          '
        nix_path: nixpkgs=channel:nixos-unstable
    - name: ✓ Install cachix
      uses: cachix/cachix-action@v16
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        cachixArgs: --compression-level 9
        extraPullNames: nix-community, njk
        name: njk
        signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
    - if: github.ref_type != 'tag'
      name: ✓ Build package
      run: nix build --accept-flake-config .#default
    - if: github.ref_type == 'tag'
      name: ✓ Build release
      run: 'working_dir=$(pwd)

        build_loc="$working_dir/release.txt"

        nix build --accept-flake-config --json .#default | jq -r ''.[] | .outputs
        | (.out + "/bin/dkeygen")'' > "$build_loc"

        cp "$(cat $build_loc)" "$working_dir/dkeygen-$(uname -m)"

        '
    - if: github.ref_type == 'tag'
      name: ✓ Release
      uses: softprops/action-gh-release@v2
      with:
        files: dkeygen-*
    - if: ${{ failure() }}
      name: ✓ tmate.io session
      uses: mxschmitt/action-tmate@master
      with:
        connect-timeout-seconds: 600
        limit-access-to-actor: true
    strategy:
      matrix:
        include:
        - arch: x86_64-linux
          runs-on: ubuntu-22.04
        - arch: aarch64-linux
          runs-on: ubuntu-22.04-arm
name: Release
'on':
  check_suite:
    types:
    - completed
  workflow_dispatch: null
